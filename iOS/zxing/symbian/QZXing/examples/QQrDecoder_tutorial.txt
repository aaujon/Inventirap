QQrDecoder project is developed entirely in Qt SDK + using the CPP part of the ZXing library.
It supports the latest version of Qt in Symbian (4.7.x) and the camera is controled using the Camera APIs from Qt Mobility project.
Thus we reasure the compatibility with future releases of Qt and the compatibility with newer device with Symbian^3, Belle and Anna (and S60 5th).

The project's folder contains the code as well as the an installation file in case you want try it out without compiling the project.

NOTE: this project, since it uses Camera APIs from Qt Mobility breaks the backward compatibility with non touch-screen devices. So this project
can't be used at device with OS: S60 3rd. 

== Prerequisities to compile ==

* Have Qt SDK installed. This will give you all the tools needed such as the Qt SDK, Qt Mobility APIs and the Qt Creator IDE.
	http://qt.nokia.com/downloads/
	
== Prerequisities to install and run to device ==

* Have Qt 4.7.3 (and newer) binaries installed to the device. 
* Have Qt Mobility 1.1.0 (and newer) binaries installed to the device.

NOTE: those binaries, if Qt SDK is installed, can be found under the path \QtSDK\Symbian\sis\Symbian^X\
	
== Importing the project ==

For this step, Qt Creator IDE will be used (contained in Qt SDK). The project can be imported/opened with 2 ways.

NOTE: The project folder must be placed under the same drive letter as the installed Qt SDK. For example "C:\QtSDK" and "C:\QtProjects\QQrDecoder"

# Go the the project's folder and double-click the QQrDecoder.pro file. This will result the Qt Creator to open. (This requires that Qt Creator is 
	selected as the predefined program to open such files which is automatically set when installing Qt SDK.)
# Alternatively, open Qt Creator manualy, and go under: "File" -> "Open File or Project...", go to the project's folder and select once again the 
	QQrDecoder.pro.

Whichever step from the above you have followed, now you are led to screen named "Project Setup". Here you select the Target Platform.
You can select "Symbian Device" to target directly for a physical device, or "Qt Simulator" to first test it to the build-in simulator.

== Building the project ==

At this point you have imported the project and you are ready to compile it. At the left toolbar in Qt Creator, above the green arrow you can see the
current target platform selected. Press to select which you want. 

Now by pressing Ctrl+B or the "hammer icon" on the left at the bottom. Normaly this should be completed without errors (might be lots of wrning though
which we selectively reject them from our mind :P )

This step compiles the project BUT doesn't produces the .sis file (the installation file). To create the installation file you have to press the "Run button".
It that "Green arrow" on your left, or by simply pressing Ctrl+R. Regardless if you have a device or not, the .sis file will be created.

Now you can install it to your device. 

== Additional information ==
For afew more details about the implementation you can see the following page:
http://wiki.forum.nokia.com/index.php/Qr_Decoder_in_Qt

== The same project in Symbian C++ ==

In case you are interested in using this project with only Symbian C++, take a look at ZXingBarcodeReader folder.